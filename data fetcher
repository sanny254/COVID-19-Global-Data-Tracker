import requests
import pandas as pd
from datetime import datetime
import os
import json

class CovidDataFetcher:
    def __init__(self):
        self.base_url = "https://disease.sh/v3/covid-19/"
        self.cache_file = "data/covid_cache.json"
        self.cache_duration = 3600  # 1 hour in seconds

    def fetch_data(self, endpoint):
        url = f"{self.base_url}{endpoint}"
        try:
            response = requests.get(url)
            response.raise_for_status()
            return response.json()
        except requests.exceptions.RequestException as e:
            print(f"Error fetching data: {e}")
            return None

    def get_global_data(self):
        return self.fetch_data("all")

    def get_country_data(self):
        return self.fetch_data("countries")

    def get_historical_data(self, days=30):
        return self.fetch_data(f"historical/all?lastdays={days}")

    def cache_data(self, data):
        os.makedirs("data", exist_ok=True)
        with open(self.cache_file, "w") as f:
            json.dump({
                "timestamp": datetime.now().timestamp(),
                "data": data
            }, f)

    def load_cached_data(self):
        if not os.path.exists(self.cache_file):
            return None
            
        with open(self.cache_file, "r") as f:
            cache = json.load(f)
            if datetime.now().timestamp() - cache["timestamp"] < self.cache_duration:
                return cache["data"]
        return None
